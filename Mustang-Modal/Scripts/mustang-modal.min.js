var __isAsnyc = !1, _title = "", _body = "", _buttons = [], _width = 0, _height = 0, _loadPath = "", _parameters = {}, _callback = null, _animate = "slideDown", _speed = 500, _escapeClose = !1, _clickClose = !1, _eq = null, _onClose = function () { }, _onOpen = function () { }, _allowAutoClose = 0, _MustangHub = { definations: { activeModal: ".active-modal", mainMustangModal: ".mustang-modal", mustangModalTitle: ".mustang-modal-title", mustangModalBody: ".mustang-modal-body", mustangModalFooter: ".mustang-modal-footer", mustangModalBg: "#mustang-modal-bg", mustangModalContainer: ".mustang-modal-container", defaultMaxWidth: 800 }, loadMessageBox: function (t) { __isAsnyc = !1, t = $.extend({ title: "", body: "", width: 0, height: 0, buttons: [], animate: "slideDown", speed: 500, escapeClose: !1, clickClose: !1, onClose: function () { }, onOpen: function () { }, allowAutoClose: 0 }, t), _title = t.title, _body = t.body, _width = t.width, _height = t.height, _buttons = t.buttons, _animate = t.animate, _speed = t.speed, _escapeClose = t.escapeClose, _clickClose = t.clickClose, _onClose = t.onClose, _onOpen = t.onOpen, _allowAutoClose = t.allowAutoClose }, setTitle: function (t) { return "" == t ? "" : "<div class='mustang-modal-title'><h3>" + t + "</h3></div>" }, setBody: function (t) { return void 0 == t || "" == t ? '<div class="mustang-modal-body"></div>' : '<div class="mustang-modal-body">' + t + "</div>" }, setWidth: function (t) { 0 != t && void 0 != t && ($(_MustangHub.definations.activeModal).css({ width: t, "margin-left": -Math.floor(t / 2) + "px" }), t > _MustangHub.definations.defaultMaxWidth && $(_MustangHub.definations.activeModal).css({ "max-width": t })) }, setHeight: function (t) { if (0 == t || void 0 == t) t = "auto"; else { var a = $(_MustangHub.definations.activeModal + " " + _MustangHub.definations.mustangModalBody), n = a.css("padding-top").replace("px", ""), e = a.css("padding-top").replace("px", ""); t = Number(t) + Number(e) + Number(n) } $(_MustangHub.definations.activeModal + " " + _MustangHub.definations.mustangModalBody).css({ height: t }) }, setButtons: function (t) { if (t == [] || "" == t) return ""; for (var a = "", n = 0; n < t.length; n++) { var e = t[n]; void 0 == e.id && (e.id = _MustangHub.generateGuidId(), t[n] = e), void 0 == e.style && (e.style = "default"), void 0 == e.text && (e.text = "Button Name"), a += '<input id="' + e.id + '" type="button" class="button mustang-btn mustang-btn-' + e.style + ' pbutton" value="' + e.text + '"/>' } return '<div class="mustang-modal-footer mustang-modal-buttons">' + a + "</div>" }, addBackground: function () { $("body").append('<div id="mustang-modal-bg"></div>'), $("body").css("overflow", "hidden") }, removeBackground: function () { 0 == $(_MustangHub.definations.mainMustangModal).length && ($("#mustang-modal-bg").remove(), $("body").css("overflow", "auto")) }, addModalContainer: function (t) { return "<div class='mustang-modal-container'>" + t + "</div>" }, removeModalContainer: function () { $(_MustangHub.definations.activeModal).parent().remove() }, appendModal: function (t) { $("body").append(0 == _buttons.length ? _MustangHub.addModalContainer('<div class="mustang-modal active-modal"><p class="mustang-modal-close" onclick="MustangModal.Close(); return false;">x</p>' + t + "</div>") : _MustangHub.addModalContainer('<div class="mustang-modal active-modal">' + t + "</div>")), _MustangHub.resetActiveModal(), _MustangHub.setWidth(_width), _MustangHub.setHeight(_height); var a = _buttons; if (_buttons != [] && $(".pbutton").on("click", function () { var t = $(this).attr("id"); if ("undefined" == t) return console.error("You must fill the id field(s)."), !1; for (var n = 0; n < a.length; n++) a[n].id == t && $.call(this, a[n].callback); return !1 }), __isAsnyc && ajaxMethods.load(_MustangHub.definations.activeModal + " " + _MustangHub.definations.mustangModalBody, _loadPath, _parameters, _callback), _MustangHub.hasAnimate()) { var n = $(_MustangHub.definations.activeModal), e = $(_MustangHub.definations.activeModal).height(); n.css({ top: "-" + e + "px" }) } 1 == _escapeClose && _MustangHub.escapeClose(), 1 == _clickClose && _MustangHub.clickClose() }, open: function () { var t = _MustangHub.setTitle(_title), a = ""; __isAsnyc ? a = _MustangHub.setBody() : (_MustangHub.setBody(""), a = _MustangHub.setBody(_body)); var n = _MustangHub.setButtons(_buttons); switch ($(_MustangHub.definations.activeModal).fadeIn(300), _MustangHub.appendModal(t + a + n), _animate) { case "slideDown": $(_MustangHub.definations.activeModal).animate({ top: "0px" }, _speed, function () { _MustangHub.onOpen(), _allowAutoClose > 0 && _MustangHub.autoClose(_allowAutoClose) }); break; case "toggle": $(_MustangHub.definations.activeModal).css({ top: "0", display: "none" }).slideDown(_speed, function () { _MustangHub.onOpen(), _allowAutoClose > 0 && _MustangHub.autoClose(_allowAutoClose) }); break; case "fading": $(_MustangHub.definations.activeModal).css({ top: "0", display: "none" }).fadeIn(_speed, function () { _MustangHub.onOpen(), _allowAutoClose > 0 && _MustangHub.autoClose(_allowAutoClose) }) } }, close: function () { var t = $(_MustangHub.definations.activeModal), a = t.height(); if (_MustangHub.hasAnimate()) switch (_animate) { case "slideDown": $(_MustangHub.definations.activeModal).animate({ top: "-" + a + "px" }, _speed, function () { _MustangHub.removeModalContainer(), $(t).remove(), _MustangHub.onClose(), _MustangHub.resetActiveModal(), _MustangHub.resetOptions() }); break; case "toggle": $(_MustangHub.definations.activeModal).slideUp(_speed, function () { _MustangHub.removeModalContainer(), $(t).remove(), _MustangHub.onClose(), _MustangHub.resetActiveModal(), _MustangHub.resetOptions() }); break; case "fading": $(_MustangHub.definations.activeModal).fadeOut(_speed, function () { _MustangHub.removeModalContainer(), $(t).remove(), _MustangHub.onClose(), _MustangHub.resetActiveModal(), _MustangHub.resetOptions() }) } else $(t).remove(), _MustangHub.resetActiveModal(); __isAsnyc = !1 }, resetActiveModal: function () { $(_MustangHub.definations.mainMustangModal).removeClass("active-modal"), $(_MustangHub.definations.mainMustangModal).last().addClass("active-modal"), $(_MustangHub.definations.mainMustangModal).css("z-index", 0), $(_MustangHub.definations.activeModal).css("z-index", 9999), 0 == $(_MustangHub.definations.mustangModalBg).length && _MustangHub.addBackground(), $(_MustangHub.definations.mustangModalBg).css("z-index", 9990), 0 == $(_MustangHub.definations.mainMustangModal).length && _MustangHub.removeBackground() }, generateGuidId: function () { for (var t = "", a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = 0; 7 > n; n++) t += a.charAt(Math.floor(Math.random() * a.length)); return t }, hasAnimate: function () { return "" != _animate ? !0 : !1 }, escapeClose: function () { $(window).on("keyup", function (t) { 27 == t.keyCode && _MustangHub.close() }) }, clickClose: function () { $(_MustangHub.definations.mustangModalContainer).on("click", function () { _MustangHub.close() }) }, onClose: function () { $.call(this, _onClose) }, onOpen: function () { $.call(this, _onOpen) }, resize: function () { _MustangHub.setWidth(_width), _MustangHub.setHeight(_height) }, resetOptions: function () { _width = 0, _height = 0, _loadPath = "", _parameters = {}, _callback = null, _animate = "slideDown", _speed = 500, _escapeClose = !1, _title = "", _body = "", _buttons = [], _clickClose = !1, _onClose = function () { }, _onOpen = function () { }, _eq = null, _allowAutoClose = 0 }, autoClose: function (t) { setTimeout(function () { MustangModal.close() }, t) } }, ajaxMethods = { load: function (t, a, n, e) { $(t).load(a, n, e) } }, MustangCrossInteraction = function () { this.load = function (t, a, n) { if (null != _eq) { var e = $(_MustangHub.definations.mainMustangModal).eq(_eq).children(_MustangHub.definations.mustangModalBody); ajaxMethods.load(e, t, a, n) } }, this.iframe = function (t, a, n) { if (null != _eq) { (0 == n || void 0 == n) && (n = "100%"), (0 == a || void 0 == a) && (a = "100%"), _MustangHub.setBody(""); var e = ""; e += '<iframe style="width:' + a + ";height:" + n + ';" src="' + t + ' ">', e += "</iframe>", _body = e, $(_MustangHub.definations.mainMustangModal).eq(_eq).children(_MustangHub.definations.mustangModalBody).html(e), _MustangHub.resize() } }, this.changeBody = function (t) { null != _eq && ($(_MustangHub.definations.mainMustangModal + " " + _MustangHub.definations.mustangModalBody).eq(_eq).remove(), _body = _MustangHub.setBody(t), $(_MustangHub.definations.mainMustangModal + " " + _MustangHub.definations.mustangModalTitle).eq(_eq).after(_body)) }, this.width = function (t) { if (null != _eq) { if (0 == t || void 0 == t) return !1; $(_MustangHub.definations.mainMustangModal).eq(_eq).css({ width: t, "margin-left": -Math.floor(t / 2) + "px" }), t > _MustangHub.definations.defaultMaxWidth && $(_MustangHub.definations.mainMustangModal).eq(_eq).css({ "max-width": t }) } }, this.height = function (t) { if (null != _eq) { if (0 == t || void 0 == t) return !1; var a = $(_MustangHub.definations.mainMustangModal).eq(_eq), n = a.css("padding-top").replace("px", ""), e = a.css("padding-top").replace("px", ""); t = Number(t) + Number(e) + Number(n), $(_MustangHub.definations.mainMustangModal + " " + _MustangHub.definations.mustangModalBody).eq(_eq).css({ height: t }) } }, this.resetResize = function () { this.height(), this.width() } }, MustangModal = { prop: function (t) { return _MustangHub.loadMessageBox(t), this }, load: function (t, a, n) { return __isAsnyc = !0, _MustangHub.setBody(""), _parameters = a, _loadPath = t, _callback = n, this }, openIframe: function (t, a, n) { (0 == n || void 0 == n) && (n = "100%"), (0 == a || void 0 == a) && (a = "100%"), _MustangHub.setBody(""); var e = ""; return e += '<iframe style="width:' + a + ";height:" + n + ';" src="' + t + ' ">', e += "</iframe>", _body = e, this }, open: function (t) { void 0 != t && (_body = t.html()), _MustangHub.open() }, close: function () { _MustangHub.close() }, changeBody: function (t) { $(_MustangHub.definations.activeModal + " " + _MustangHub.definations.mustangModalBody).remove(), _body = _MustangHub.setBody(t), $(_MustangHub.definations.activeModal + " " + _MustangHub.definations.mustangModalTitle).after(_body), _MustangHub.resize() }, eq: function (t) { return _eq = t, new MustangCrossInteraction } }; MustangModal.Close = function () { _MustangHub.close() }, $(document).ready(function () { $("a.m-modal,button.m-modal").on("click", function () { var t = $(this), a = t.data("title"), n = t.data("type"), e = t.data("target"), o = t.data("speed"), s = t.data("animate"), i = t.data("width"), u = t.data("height"), d = t.data("escapeclose"), l = t.data("clickclose"), c = MustangModal.prop({ title: a, animate: s, speed: o, width: i, height: u, escapeClose: d, clickClose: l }); switch (n) { case "iframe": c.openIframe(e).open(); break; case "load": c.load(e).open(); break; case "html": c.open($(e)) } }) });